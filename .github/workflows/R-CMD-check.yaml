name: R-CMD-check

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  main:
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    runs-on: ${{ matrix.config.os }}
    timeout-minutes: 60

    strategy:
      fail-fast: false
      matrix:
        config:
        - {os: macOS-latest,   r: 'release'}
        - {os: windows-latest, r: 'release'}
        - {os: ubuntu-latest,  r: 'release'}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup system dependencies (Ubuntu)
        if: matrix.config.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev \
            libharfbuzz-dev \
            libfribidi-dev \
            libfontconfig1-dev \
            libfreetype6-dev \
            libpng-dev \
            libtiff5-dev \
            libjpeg-dev \
            pandoc

      - name: Setup Pandoc (macOS)
        if: matrix.config.os == 'macOS-latest'
        run: brew install pandoc

      - name: Setup Pandoc (Windows)
        if: matrix.config.os == 'windows-latest'
        uses: r-lib/actions/setup-pandoc@v2

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          use-public-rspm: true

      - name: Setup R dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache-version: 2
          needs: check
          extra-packages: |
            any::devtools
            any::optparse
            any::lintr
            any::spelling
            local::.

      - name: R CMD check
        uses: r-lib/actions/check-r-package@v2
        with:
          args: 'c("--no-manual", "--as-cran")'
          error-on: '"warning"'
          upload-snapshots: true

      - name: Lint
        if: always()
        shell: Rscript {0}
        run: |
          if (!require("lintr", quietly = TRUE)) {
            install.packages("lintr")
          }
          lints <- lintr::lint_package()
          for (lint in lints) print(lint)
          quit(status = length(lints) > 0)

      - name: Spell Check
        if: always()
        shell: Rscript {0}
        run: |
          if (!require("spelling", quietly = TRUE)) {
            install.packages("spelling")
          }
          spell_check <- spelling::spell_check_package(use_wordlist = TRUE)
          if (!require("cli", quietly = TRUE)) {
            cat("There are", nrow(spell_check), "spelling errors.\n")
          } else {
            cli::cli_alert_warning("There are {nrow(spell_check)} spelling error{?s}.")
          }
          if (nrow(spell_check) > 0) {
            print(spell_check)
          }
          quit(status = nrow(spell_check) > 0)
